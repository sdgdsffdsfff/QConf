#include "gtest/gtest.h"
#include "agent_const_def.h"
#include "agent_util.h"


class qconf_scriptTestF : public ::testing::Test
{
protected:
    static void SetUpTestCase()
    {
    }
    virtual void SetUp()
    {
    }

    virtual void TearDown()
    {
    }

    static void TearDownTestCase()
    {
    }
};

extern int str_replace(char *str, char old_char, char new_char);
TEST(qconf_scriptTest, str_replace)
{
    int retCode = -1;
    char script[1024] = "/demo/conf/";
    char *str = script;
    retCode = str_replace(str, '/', '#');
    EXPECT_EQ(QCONF_OK, retCode);
    EXPECT_STREQ("#demo#conf#", str);
}

TEST(qconf_scriptTest, str_replace_no_need)
{
    int retCode = -1;
    char script[1024] = "democonf";
    char *str = script;
    retCode = str_replace(str, '/', '#');
    EXPECT_EQ(QCONF_OK, retCode);
    EXPECT_STREQ("democonf", str);
}

TEST(qconf_scriptTest, str_replace_err_param)
{
    int retCode = -1;
    char *str = NULL;
    retCode = str_replace(str, '/', '#');
    EXPECT_EQ(QCONF_ERR_PARAM, retCode);
}

extern int is_file_exist(const char *path);
TEST(qconf_scriptTest, is_file_exist_common)
{
    int retCode = -1;
    retCode = is_file_exist("script/demo#conf#conf1.sh");
    EXPECT_EQ(QCONF_OK, retCode);
    retCode = -1;
    retCode = is_file_exist("script/demo#conf#conf12.sh");
    EXPECT_EQ(QCONF_ERR_FAILED_OPEN_FILE, retCode);
}

TEST(qconf_scriptTest, is_file_exist_no_read_permision)
{
    int retCode = -1;
    retCode = is_file_exist("script/no_read.sh");
    EXPECT_EQ(QCONF_ERR_FAILED_OPEN_FILE, retCode);
}

extern int file_read_all(const char *path, char *script, int script_len);
TEST(qconf_scriptTest, file_read_all_common)
{
    int retCode = -1;
    char script[1024];
    retCode = file_read_all("script/demo#conf.sh", script, 1024);
    EXPECT_EQ(QCONF_OK, retCode);
    EXPECT_STREQ("demo#conf\n", script);
}

TEST(qconf_scriptTest, file_read_all_no_read_permision)
{
    int retCode = -1;
    char script[1024];
    retCode = file_read_all("script/no_read.sh", script, 1024);
    EXPECT_EQ(QCONF_ERR_FAILED_OPEN_FILE, retCode);
}

TEST(qconf_scriptTest, file_read_all_buffer_not_enough)
{
    int retCode = -1;
    char script[1024];
    retCode = file_read_all("script/demo#conf.sh", script, 2);
    EXPECT_EQ(QCONF_ERR_BUF_NOT_ENOUGH, retCode);
}

